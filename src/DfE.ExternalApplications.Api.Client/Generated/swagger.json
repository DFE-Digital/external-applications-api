{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Api",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/Templates/{templateId}/schema": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Returns the latest template schema for the specified template name if the user has access.",
        "operationId": "Templates_GetLatestTemplateSchema",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The latest template schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSchemaDto"
                }
              }
            }
          },
          "400": {
            "description": "Request was invalid or access denied."
          }
        }
      }
    },
    "/v1/me/permissions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns all my permissions.",
        "operationId": "Users_GetMyPermissions",
        "responses": {
          "200": {
            "description": "A UserPermission object representing the User's Permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized â€“ no valid user token"
          }
        }
      }
    },
    "/v1/Users/{email}/permissions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns all permissions for the user by {email}.",
        "operationId": "Users_GetAllPermissionsForUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A UserPermission object representing the User's Permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email cannot be null or empty."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TemplateSchemaDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "templateId": {
            "type": "string",
            "format": "guid"
          },
          "versionNumber": {
            "type": "string"
          },
          "jsonSchema": {
            "type": "string"
          }
        }
      },
      "UserPermissionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "applicationId": {
            "type": "string",
            "format": "guid"
          },
          "resourceKey": {
            "type": "string"
          },
          "resourceType": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "accessType": {
            "$ref": "#/components/schemas/AccessType"
          }
        }
      },
      "ResourceType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Application",
          "TaskGroup",
          "Task",
          "Page",
          "Field"
        ],
        "enum": [
          "Application",
          "TaskGroup",
          "Task",
          "Page",
          "Field"
        ]
      },
      "AccessType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Read",
          "Write"
        ],
        "enum": [
          "Read",
          "Write"
        ]
      }
    }
  }
}